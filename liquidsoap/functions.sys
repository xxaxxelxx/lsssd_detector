###################
# FUNCTIONS

def to_signal(old,new)
    if status_enabled = true then
	system("echo \"signal $(date \"+%s\")\" > #{status_src}")
    end
    if logging_enabled = true then
	system("echo \"$(date \"+%Y-%m-%d %H:%M:%S\") | Signal detected.\" >> #{logging_file}")
    end
    if test_process(strg_sql_set_sound) == true then
	if logging_enabled = true then
	    system("echo \"$(date \"+%Y-%m-%d %H:%M:%S\") | URL #{url} reported to #{db_host} as sounding.\" >> #{logging_file}")
	end
    end

  out = add(normalize=false,
      [ fade.initial(duration=5.,new),
        fade.final(duration=5.,old) ])
  out
end

def to_silence(old,new)
    if status_enabled = true then
	system("echo \"silence $(date \"+%s\")\" > #{status_src}")
    end
    if logging_enabled = true then
	system("echo \"$(date \"+%Y-%m-%d %H:%M:%S\") | Sound of Silence detected.\" >> #{logging_file}")
    end
    if test_process(strg_sql_set_silent) == true then
	if logging_enabled = true then
	    system("echo \"$(date \"+%Y-%m-%d %H:%M:%S\") | URL #{url} reported to #{db_host} as silent.\" >> #{logging_file}")
	end
    end

  out = add(normalize=false,
      [ fade.initial(duration=5.,new),
	fade.final(duration=5.,old) ])
  out
end

def test_parallelprocess()
    if test_process(strg_sql_parallel_process) == true then
        if logging_enabled = true then
	    system("echo \"$(date \"+%Y-%m-%d %H:%M:%S\") | Parallel process found in database. Shutting down #{url}.\" >> #{logging_file}")
	end
	shutdown()
    end
    alive_interval
end

def test_validmntpnt()
    if test_process(strg_sql_valid_mntpnt) != true then
	if logging_enabled = true then
	    system("echo \"$(date \"+%Y-%m-%d %H:%M:%S\") | URL not found in database. Shutting down #{url}.\" >> #{logging_file}")
	end
	shutdown()
    end
    alive_interval
end

def do_shutdown()
    if logging_enabled = true then
	system("echo \"$(date \"+%Y-%m-%d %H:%M:%S\") | Maximum runtime #{max_runtime} reached. Shutting down #{url}.\" >> #{logging_file}")
    end
    shutdown()
    max_runtime
end

if status_enabled = true then
    system("test -d #{status_dir} || mkdir -p #{status_dir}")
end
if logging_enabled = true then
    system("test -d #{logging_dir} || mkdir -p #{logging_dir}")
end

if status_enabled = true then
    system("echo \"signal $(date \"+%s\")\" > #{status_src}")
end
if logging_enabled = true then
    system("echo \"$(date \"+%Y-%m-%d %H:%M:%S\") | Starting #{url}. Signal assumed.\" >> #{logging_file}")
end

# END
#####
